# This is the main configuration file for the application.
# ~~~~~
# See https://www.playframework.com/documentation/latest/Configuration for
# more information on editing this configuration file.

# Error handling
# ~~~~~
# Define the HttpErrorHandler object to use for error handling in this
# application.
#
# See https://www.playframework.com/documentation/latest/JavaErrorHandling for
# more information on error handling.
#
# play.http.errorHandler = "play.http.DefaultErrorHandler"

# Dependency injection bindings
# ~~~~~
# Define modules to be referenced by the application in resolving
# object dependencies at runtime using dependency injection.
#
# See https://www.playframework.com/documentation/latest/JavaDependencyInjection
# for more information on dependency injection.
#
# play.modules.enabled += "tld.myapp.MyModule"

# Database configuration
# ~~~~~
# Set database connection settings here, or create "db.conf" in the "conf"
# directory and include it, as shown.
#
# To see an example "db.conf" file, open "db.conf.example" in the "conf"
# directory.
# include "db.conf"

# Cryptographic secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# Set these values if you plan to use Play!'s built-in cryptographics
# functions.
#
# This must be changed for production, but we recommend not changing it in
# this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret
# for more details.
# play.crypto.secret = "changeme"
# play.crypto.secret = ${?MYAPPLICATION_PLAY_CRYPTO_SECRET}
#
# Application-supported languages
# ~~~~~
# Set these values if your application requires I18N support.
#
# See https://www.playframework.com/documentation/latest/JavaI18N
# for more details.
# play.i18n.langs = [ "en" ]
#
# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# play.http.router = my.application.Routes
